目標：
  プログラミング作法、コーディング標準
  プログラム言語の文法の表記法

アルゴリズム
  プログラミング
    コンパイル
      ２進数 
        実行


データ型
  整数型
  実数型
    小数点を含んだ数値
  論理型
    YESとNOのどちらか
  文字型
  抽象データ型
    オブジェクト指向で定義されるクラス


プログラム構造
  メインルーチン
  サブルーチン


オブジェクト指向
  クラス、属性（プロパティ）とメソッドを定義
  プログラム上で抽象化して表現

  車クラス
    属性
      車種
      価格
    メソッド
      走る
      止まる
  インスタンス化
    車
      トヨタプリウス
      ３００万

  継承
    スーパークラス
      サブクラス

    車クラス
      軽自動車クラス
      電気自動車クラス

  ポリモーフィズム
    サブクラスを複数作成して、サブクラスごとに同じ名前のメソッドをそれぞれ作成、処理の中身を変える。

    人クラス
      日本人クラス
        日本語を話す
      アメリカ人クラス
        英語を話す


プログラム構造
  モジュール分割
    プログラムを機能ごとに適切な大きさのプログラム、複数の部分（モジュール）に分割すること
  独立性
    モジュール同士での結びつきが小さいことを独立性が高い
    一部のモジュールを修正した場合に他のモジュールに与える影響が小さい
  オーバーライド
    継承したサブクラスでスーパークラスのメソッドを上書きすること
  オーバーロード
    名前は同じだが、引数、戻り値の異なるメソッドを定義すること
  
静的リンク
動的リンク


プログラミング作法とコーディング標準
  字下げ
  ネストの深さ
  命名規則
  プログラムの機能適合性
    必要な機能が実装されているか
  プログラムの性能効率性
    処理のはやさ
  プログラムの使用性
    使いやすさ
  プログラムの保守性
  
プログラミングの特性
  リエントラント（再入可能）
    複数のプロセスから呼び出しても互いに干渉せず正しい結果を返すこと
  リカーシブ（再帰可能）
    実行中に自分自身を呼び出すことができること
  リユーザブル（再使用可能）
  リロケータブル（再配置可能）


サーバーサイドプログラミング
  MVCモデルが基本


WEBプログラミング
  リッチクライアント
  Ajax
  Apache
  HTML5
    canvas
    Websocket
    Geolocation API
  SPA
  
