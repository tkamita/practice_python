OSの種類
  windows
  macOS
    unixがベース
  unix
    デーモン
      バックグラウンドプロセス
  linux
    unix系のos
  android
  ios


OSの起動
  BIOS
    OSが起動する前に立ち上がる
    ハードウェアの制御
    起動するOSを選択
    OSをメモリに読みこむ
  マルチブート
    ハードウェア上に複数のOSをインストール、洗濯して起動
  
OSの役割
  ユーザの管理
  ハードウェア資源の管理
    CPU,メモリなどを効率的に使えるようにする
  タスクの管理
  ファイルの管理
  周辺機器の管理
    デバイスドライバ
      マウス、プリンタを接続して使用


カーネル
  OS
    カーネル
      コンピュータのリソースの管理
      ハードウェアの制御

      モノリシックカーネル
        プロセス管理
        メモリ管理
        ファイルシステム管理
        デバイス管理
      マイクロカーネル
    それ以外

メモリ管理
  フラグメンテーション→コンパクション
  空きメモリ領域確保のアルゴリズム
    ファーストフィット
    ベストフィット
    オーバレイ


仮想メモリ
  ページング
  ページフォールト
  ページイン
  ページアウト
  ページリプレースメント
  デマンドページング
  プリページング


ページ置き換えアルゴリズム
  FIFO(First-in First-out)
  LIFO(Last-in First-out)
  LRU(Least Recently Used)
  LFU(Least Frequency Used)

  スラッシング



プロセスの状態遷移
  実行状態
  実行可能状態
  待ち状態


スケジューリング方式
  ラウンドロビン方式
  優先度順方式
  到着順方式
  SJF(Short job First)
  多重ま待ち行列方式
  フィードバック待ち行列方式



プロセスの排他制御
  複数のプロセスが同時に実行
  メモリの競合を解消する
  １つのプロセスがアクセスしている時は他のプロセスはアクセスできない

  共有ロック
  占有ロック
  クリティカルセクション


  デッドロック
    複数のプロセスがお互いにロックしたリソースをもち、処理が進まない
  待ちグラフ


同期制御
  複数のプロセス
    各プロセス間で同期をとって処理する


セマフォシステム
  セマフォ
  P操作
  V操作




API(Application Programming Interface)
コンポーネントウェア
  再利用可能なソフトウェアを組み合わせてアプリケーションを開発する手法

  Java Beans
  ActiveX
  CORBA



開発フレームワーク
  クラスやライブラリの集まり

  Apache
  Struts
  Spring
    javaのアプリケーションフレームワーク
  



ファイルとフォルダ、ディレクトリ
ディレクトリの階層構造
  ルートディレクトリ
  カレントディレクトリ

絶対パス 
  ルートディレクトリからみた
相対パス
  カレントディレクトリから


バックアップの方式
  フルバックアップ
    マスタ
  差分バックアップ
    マスタ
      ディベロップ
  増分バックアップ
    マスタ
      ディベロップ
        各ブランチ
  

